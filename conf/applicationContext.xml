<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- 開啟註解掃描，希望處理dao和service，controller不需要spring框架去處理 -->
	<context:component-scan base-package="tw.com">
		<!-- 配置那些註解不需要掃描 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<!-- 導入資源文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置數據源(連接池) -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${mysql.driver_class}" />
		<property name="jdbcUrl" value="${mysql.url}" />
		<property name="user" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<property name="initialPoolSize" value="${mysql.initPoolSize}" />
		<property name="maxPoolSize" value="${mysql.maxPoolSize}" />
	</bean>

	<!-- 配置Hibernate的SessionFactroy物件 ，使用Spring提供的進行配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 配置數據源屬性 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置Hibernate配置文件的位置及名稱 -->
		<property name="configLocation" value="classpath:hibernatetospring.cfg.xml" />
		<!-- 配置Hibernate映射文件的位置及名稱，可以使用通配符號 -->
		<property name="mappingLocations" value="classpath:tw/com/domain/*.hbm.xml" />			
	</bean>


	<!-- 配置事務管理器 -->
	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置事務通知 -->
	<tx:advice id="tx" transaction-manager="hibernateTransactionManager">
		<tx:attributes>
			<!-- 在設置好的切入點表達式下再次進行事務設置 -->
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" isolation="DEFAULT" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置切入點表達式 -->
	<aop:config>
		<!-- impl底下的類的的方法不一定所有都要進行事務管理，因為可能有些方法不涉及資料庫CRUD，所以可再透過配置事務通知指定哪些方法要被通知 -->
		<aop:pointcut expression="execution(* tw.com.service.impl.*.*(..))"
			id="cut" />
		<aop:advisor advice-ref="tx" pointcut-ref="cut" />
	</aop:config>

</beans>